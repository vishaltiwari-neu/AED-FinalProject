/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package design;

import java.util.Dictionary;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.BrokerDirectory;
import model.Person;

/**
 *
 * @author HP
 */
public class BrokerCustomerList extends javax.swing.JPanel {

    /**
     * Creates new form BrokerCustomerList
     */
    private static Person person;
    
    public BrokerCustomerList(Person person) {
        this.person = person;
        initComponents();
        BrokerDirectory bd = new BrokerDirectory();
        List<Dictionary> dealList = bd.getBrokerDeals(person.getId());
        populatetable(dealList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BrokerCustomerList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        BrokerCustomerList.setBackground(new java.awt.Color(51, 0, 0));
        BrokerCustomerList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Apt ID", "Customer Name", "Customer Contact No", "Apartment Type", "Beds", "Baths", "Apartment Address"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        BrokerCustomerList.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 109, 940, 420));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/youth.png"))); // NOI18N
        jLabel1.setText("LIST OF CUSTOMERS");
        BrokerCustomerList.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 340, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BrokerCustomerList, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BrokerCustomerList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BrokerCustomerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void populatetable(List<Dictionary> dealList) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);
        for (Dictionary d : dealList) {
//            VitalRecord vr = e.getVital();
            Object[] row = new Object[7];
            row[0] = d.get("aptId");
            row[1] = d.get("customerName");
            row[2] = d.get("customerContact");
            row[3] = d.get("apartmentType");
            row[4] = d.get("beds");
            row[5] = d.get("bath");
            row[6] = d.get("apartmentAddress");
            model.addRow(row);
        }
        
    }
}
